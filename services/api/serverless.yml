service: api

provider:
  name: aws
  runtime: nodejs10.x
  region: us-east-1
  state: dev

# plugins:
#   - serverless-offline

custom:
  stage: ${opt:stage, self:provider.stage}
  # serverless-offline:
  #   printOutput: false
  #   host: localhost
  #   httpPort: 4000

functions:
  authorizer:
    handler: src/app/authorizer/index.handler
    environment: 
      JWT_SECRET: ${ssm:${self:custom.stage}-jwt-secret}
  login:
    handler: src/app/login/index.handler
    environment: 
      JWT_SECRET: ${ssm:${self:custom.stage}-jwt-secret}
    events:
      - http:
          path: /login
          method: post
  # create_user:
  #   handler: src/app/functions/users/store.handle
  #   events:
  #     - http:
  #         path: /user
  #         method: post
  #         authorizer: defaultAuthorizer
  # delete_post:
  #   handler: src/app/functions/posts/destroy.handle
  #   events:
  #     - http:
  #         path: /cms/posts
  #         method: delete
  #         authorizer: defaultAuthorizer
  # list_post:
  #   handler: src/app/functions/posts/index.handle
  #   events:
  #     - http:
  #         path: /cms/all_posts
  #         method: get
  # get_post:
  #   handler: src/app/functions/posts/show.handle
  #   events:
  #     - http:
  #         path: /cms/posts
  #         method: get
  # update_post:
  #   handler: src/app/functions/posts/update.handle
  #   events:
  #     - http:
  #         path: /cms/posts
  #         method: put
  #         authorizer: defaultAuthorizer
  # create_post:
  #   handler: src/app/functions/posts/store.handle
  #   events:
  #     - http:
  #         path: /cms/posts
  #         method: post
  #         authorizer: defaultAuthorizer
  # sqs_create_post:
  #   handler: src/app/functions/sqs/post.handle
  #   events:
  #     - sqs:
  #         arn: arn:aws:sqs:sa-east-1:750813453023:aws-cms-serverless-queue